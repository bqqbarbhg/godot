<?xml version="1.0" encoding="UTF-8" ?>
<class name="AudioStreamFLAC" inherits="AudioStream" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		FLAC audio stream driver.
	</brief_description>
	<description>
		FLAC audio stream driver. See [member data] if you want to load an FLAC file at run-time.
	</description>
	<tutorials>
	</tutorials>
	<members>
		<member name="bar_beats" type="int" setter="set_bar_beats" getter="get_bar_beats" default="4">
			The number of beats in a bar for the audio stream.
		</member>
		<member name="beat_count" type="int" setter="set_beat_count" getter="get_beat_count" default="0">
			The total count of beats in the audio stream.
		</member>
		<member name="bpm" type="float" setter="set_bpm" getter="get_bpm" default="0.0">
			The beats per minute (BPM) for the audio stream.
		</member>
		<member name="data" type="PackedByteArray" setter="set_data" getter="get_data" default="PackedByteArray()">
			Contains the audio data in bytes.
			You can load a file without having to import it beforehand using the code snippet below. Keep in mind that this snippet loads the whole file into memory and may not be ideal for huge files (hundreds of megabytes or more).
			[codeblocks]
			[gdscript]
			func load_flac(path):
			    var file = FileAccess.open(path, FileAccess.READ)
			    var sound = AudioStreamFLAC.new()
			    sound.data = file.get_buffer(file.get_length())
			    return sound
			[/gdscript]
			[csharp]
			public AudioStreamFlac LoadFlac(string path)
			{
			    using var file = FileAccess.Open(path, FileAccess.ModeFlags.Read);
			    var sound = new AudioStreamFlac();
			    sound.Data = file.GetBuffer(file.GetLength());
			    return sound;
			}
			[/csharp]
			[/codeblocks]
		</member>
		<member name="loop" type="bool" setter="set_loop" getter="has_loop" default="false">
			If [code]true[/code], the stream will automatically loop when it reaches the end.
		</member>
		<member name="loop_offset" type="float" setter="set_loop_offset" getter="get_loop_offset" default="0.0">
			Time in seconds at which the stream starts after being looped.
		</member>
	</members>
</class>
